{
  "address": "0x75168487734ce55Bd501eA4365a84991863505Db",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_api",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Token_NoWalletAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Token_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "sendToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0bb1da548cca835638ea081429a3703daacff4291db68f67b74a8d69b0a04b33",
  "receipt": {
    "to": null,
    "from": "0xB734899976D452f558af6735F6CA28876d3a55c5",
    "contractAddress": "0x75168487734ce55Bd501eA4365a84991863505Db",
    "transactionIndex": 0,
    "gasUsed": "604762",
    "logsBloom": "0x
    "blockHash": "0xa2a42899c7c31abf188faa85ed210365ba9ec4dde32e192af6dfc9bdbcc61d90",
    "transactionHash": "0x0bb1da548cca835638ea081429a3703daacff4291db68f67b74a8d69b0a04b33",
    "logs": [],
    "blockNumber": 8,
    "cumulativeGasUsed": "604762",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x72E1538F84be57f6FdebDAD444F6Be269B52e863"
  ],
  "numDeployments": 3,
  "solcInputHash": "e0b8f5540d4ae30a29f5d14fb6ab3e4d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_api\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Token_NoWalletAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Token_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"sendToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/GameItem.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\n\\r\\ncontract GameItem {\\r\\n    \\r\\n}\",\"keccak256\":\"0xfebfd80714ce9a875ffe3ad43f5e10128331bfe15cb9e301cc37c1b57cba231e\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.7;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        \\r\\n        (, int price,,,) = priceFeed.latestRoundData();\\r\\n       \\r\\n        return uint256(price);\\r\\n    }\\r\\n\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n       \\r\\n        uint256 ethAmountUsd = ethPrice * ethAmount / 1e8;\\r\\n        return ethAmountUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x4237e8a93fd6933b5fb1ac3589223e56e3310f1b9a434f203d22e9f761447b41\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/Token.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.7;\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\nerror Token_NotOwner();\\r\\nerror Token_NoWalletAddress();\\r\\n\\r\\ncontract Token {\\r\\n    \\r\\n    using PriceConverter for uint256;\\r\\n    uint256 public constant usdPerToken = 20 *  1e18;  // 20.[18zeroes]\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor(address _api) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(_api);\\r\\n    }\\r\\n\\r\\n    receive() external payable{\\r\\n        revert Token_NoWalletAddress();\\r\\n    } \\r\\n\\r\\n    fallback() external payable{\\r\\n        revert Token_NoWalletAddress();\\r\\n    }\\r\\n\\r\\n    function sendToken(address walletAddress) public payable {\\r\\n        uint256 usdSent = msg.value.getConversionRate(priceFeed);\\r\\n        require(usdSent >= usdPerToken, \\\"Didn't Sent enough!\\\");\\r\\n        Wallet wallet = Wallet(walletAddress);\\r\\n        uint256 tokenNeedToSend = usdSent * 1e8 / usdPerToken;\\r\\n        wallet.receiveToken(tokenNeedToSend);\\r\\n    }\\r\\n\\r\\n    function withDraw() public onlyOwner{\\r\\n        (bool CallSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(CallSuccess, \\\"Call Failed\\\");\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        if(msg.sender != owner) {revert Token_NotOwner();}\\r\\n        _;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x6f84815e986e52de4bf91f88e8a9faf568f4040a8d08daa936301055d379e5db\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.7;\\r\\nimport \\\"./GameItem.sol\\\";\\r\\n\\r\\ncontract Wallet {\\r\\n    \\r\\n    uint256 private gameToken = 10 * 1e8;\\r\\n    uint256 private constant decimal = 1e8;\\r\\n    address private owner;\\r\\n    address[] private ownedItems;    \\r\\n    \\r\\n    \\r\\n    constructor () {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns(address) {\\r\\n        return owner;\\r\\n    } \\r\\n\\r\\n    function availableToken() public view returns(uint256) {\\r\\n        return gameToken;\\r\\n    }\\r\\n\\r\\n    function getItem(uint256 index) public view returns(address) {\\r\\n        return ownedItems[index];\\r\\n    } \\r\\n\\r\\n    function receiveToken(uint256 tokens) public {\\r\\n        gameToken += tokens;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x37fa71a7ac2717d532328fbf152198a5fda02e0db2e2b22ce88a9e7d0552cd28\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ae9380380610ae98339818101604052810190610032919061010f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dc826100b1565b9050919050565b6100ec816100d1565b81146100f757600080fd5b50565b600081519050610109816100e3565b92915050565b600060208284031215610125576101246100ac565b5b6000610133848285016100fa565b91505092915050565b60805161098b61015e6000396000818161016d01526102d2015261098b6000f3fe60806040526004361061004e5760003560e01c80630fdb1c10146100b75780631321e098146100ce578063741bef1a146100f95780638da5cb5b14610124578063c575c2381461014f57610085565b36610085576040517f554836d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f554836d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156100c357600080fd5b506100cc61016b565b005b3480156100da57600080fd5b506100e361029f565b6040516100f091906104e7565b60405180910390f35b34801561010557600080fd5b5061010e6102ac565b60405161011b9190610581565b60405180910390f35b34801561013057600080fd5b506101396102d0565b60405161014691906105bd565b60405180910390f35b61016960048036038101906101649190610609565b6102f4565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f0576040517fd9331abd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161021690610667565b60006040518083038185875af1925050503d8060008114610253576040519150601f19603f3d011682016040523d82523d6000602084013e610258565b606091505b505090508061029c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610293906106d9565b60405180910390fd5b50565b6801158e460913d0000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061032960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461041590919063ffffffff16565b90506801158e460913d00000811015610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90610745565b60405180910390fd5b600082905060006801158e460913d000006305f5e100846103989190610794565b6103a29190610805565b90508173ffffffffffffffffffffffffffffffffffffffff166337df00c9826040518263ffffffff1660e01b81526004016103dd91906104e7565b600060405180830381600087803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b5050505050505050565b6000806104218361044d565b905060006305f5e10085836104369190610794565b6104409190610805565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561049b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bf91906108da565b50505091505080915050919050565b6000819050919050565b6104e1816104ce565b82525050565b60006020820190506104fc60008301846104d8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061054761054261053d84610502565b610522565b610502565b9050919050565b60006105598261052c565b9050919050565b600061056b8261054e565b9050919050565b61057b81610560565b82525050565b60006020820190506105966000830184610572565b92915050565b60006105a782610502565b9050919050565b6105b78161059c565b82525050565b60006020820190506105d260008301846105ae565b92915050565b600080fd5b6105e68161059c565b81146105f157600080fd5b50565b600081359050610603816105dd565b92915050565b60006020828403121561061f5761061e6105d8565b5b600061062d848285016105f4565b91505092915050565b600081905092915050565b50565b6000610651600083610636565b915061065c82610641565b600082019050919050565b600061067282610644565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b60006106c3600b8361067c565b91506106ce8261068d565b602082019050919050565b600060208201905081810360008301526106f2816106b6565b9050919050565b7f4469646e27742053656e7420656e6f7567682100000000000000000000000000600082015250565b600061072f60138361067c565b915061073a826106f9565b602082019050919050565b6000602082019050818103600083015261075e81610722565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061079f826104ce565b91506107aa836104ce565b92508282026107b8816104ce565b915082820484148315176107cf576107ce610765565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610810826104ce565b915061081b836104ce565b92508261082b5761082a6107d6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61085581610836565b811461086057600080fd5b50565b6000815190506108728161084c565b92915050565b6000819050919050565b61088b81610878565b811461089657600080fd5b50565b6000815190506108a881610882565b92915050565b6108b7816104ce565b81146108c257600080fd5b50565b6000815190506108d4816108ae565b92915050565b600080600080600060a086880312156108f6576108f56105d8565b5b600061090488828901610863565b955050602061091588828901610899565b9450506040610926888289016108c5565b9350506060610937888289016108c5565b925050608061094888828901610863565b915050929550929590935056fea2646970667358221220d9b4dbb79b76cd0bac5093fc93d785c4275193490c805222355c51554cde496064736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80630fdb1c10146100b75780631321e098146100ce578063741bef1a146100f95780638da5cb5b14610124578063c575c2381461014f57610085565b36610085576040517f554836d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f554836d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156100c357600080fd5b506100cc61016b565b005b3480156100da57600080fd5b506100e361029f565b6040516100f091906104e7565b60405180910390f35b34801561010557600080fd5b5061010e6102ac565b60405161011b9190610581565b60405180910390f35b34801561013057600080fd5b506101396102d0565b60405161014691906105bd565b60405180910390f35b61016960048036038101906101649190610609565b6102f4565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f0576040517fd9331abd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161021690610667565b60006040518083038185875af1925050503d8060008114610253576040519150601f19603f3d011682016040523d82523d6000602084013e610258565b606091505b505090508061029c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610293906106d9565b60405180910390fd5b50565b6801158e460913d0000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061032960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461041590919063ffffffff16565b90506801158e460913d00000811015610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90610745565b60405180910390fd5b600082905060006801158e460913d000006305f5e100846103989190610794565b6103a29190610805565b90508173ffffffffffffffffffffffffffffffffffffffff166337df00c9826040518263ffffffff1660e01b81526004016103dd91906104e7565b600060405180830381600087803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b5050505050505050565b6000806104218361044d565b905060006305f5e10085836104369190610794565b6104409190610805565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561049b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bf91906108da565b50505091505080915050919050565b6000819050919050565b6104e1816104ce565b82525050565b60006020820190506104fc60008301846104d8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061054761054261053d84610502565b610522565b610502565b9050919050565b60006105598261052c565b9050919050565b600061056b8261054e565b9050919050565b61057b81610560565b82525050565b60006020820190506105966000830184610572565b92915050565b60006105a782610502565b9050919050565b6105b78161059c565b82525050565b60006020820190506105d260008301846105ae565b92915050565b600080fd5b6105e68161059c565b81146105f157600080fd5b50565b600081359050610603816105dd565b92915050565b60006020828403121561061f5761061e6105d8565b5b600061062d848285016105f4565b91505092915050565b600081905092915050565b50565b6000610651600083610636565b915061065c82610641565b600082019050919050565b600061067282610644565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b60006106c3600b8361067c565b91506106ce8261068d565b602082019050919050565b600060208201905081810360008301526106f2816106b6565b9050919050565b7f4469646e27742053656e7420656e6f7567682100000000000000000000000000600082015250565b600061072f60138361067c565b915061073a826106f9565b602082019050919050565b6000602082019050818103600083015261075e81610722565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061079f826104ce565b91506107aa836104ce565b92508282026107b8816104ce565b915082820484148315176107cf576107ce610765565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610810826104ce565b915061081b836104ce565b92508261082b5761082a6107d6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61085581610836565b811461086057600080fd5b50565b6000815190506108728161084c565b92915050565b6000819050919050565b61088b81610878565b811461089657600080fd5b50565b6000815190506108a881610882565b92915050565b6108b7816104ce565b81146108c257600080fd5b50565b6000815190506108d4816108ae565b92915050565b600080600080600060a086880312156108f6576108f56105d8565b5b600061090488828901610863565b955050602061091588828901610899565b9450506040610926888289016108c5565b9350506060610937888289016108c5565b925050608061094888828901610863565b915050929550929590935056fea2646970667358221220d9b4dbb79b76cd0bac5093fc93d785c4275193490c805222355c51554cde496064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 119,
        "contract": "contracts/Token.sol:Token",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      }
    }
  }
}